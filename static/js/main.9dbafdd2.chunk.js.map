{"version":3,"sources":["components/title.js","components/form.js","components/weather.js","components/chart.js","App.js","serviceWorker.js","index.js","components/moon.png","components/sun.png"],"names":["Title","props","className","Form","onSubmit","loadSearch","style","border","padding","type","name","height","textAlign","placeholder","color","Weather","date","Math","round","Date","getTime","backgroundColor","sunset_ts","src","moon","alt","sun","forecast_temp","country","city","desc","forecast_humi","forecast_preci","forecast_date","Chart","data","chartDataTemp","options","title","display","text","fontSize","fontColor","legend","labels","chartDataHumi","chartDataPreci","api","App","state","temp","undefined","humi","preci","loading","search","e","a","target","elements","value","setState","preventDefault","fetch","forecast_api_call","json","forecast_res","console","log","count","push","valid_date","rh","precip","days","date_record","last","day","getDate","month","getMonth","year","getFullYear","back_date","history_api_call","result","weather","hourly","tempC","humidity","precipMM","city_name","country_code","description","datasets","label","borderColor","this","animation","variant","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.9dbafdd2.chunk.js","sourcesContent":["import React from 'react';\nimport './weather.css';\n\nconst Title = (props) => {\n    return (\n        <>\n            <div>\n                <h1 className = \"title\"> Weather Forecast</h1>\n            </div>\n        </>\n    )\n}\n\nexport default Title;","import React from \"react\";\nimport \"./weather.css\";\n\nconst Form = (props) => {\n  return (\n    <form\n      onSubmit={props.loadSearch}\n      className=\"container\"\n      style={{ border: \"1px solid #ccc\" }}\n    >\n      <div className=\"row\">\n        <div className=\"col\" style={{ padding: \"0\" }}>\n          <input\n            type=\"text\"\n            name=\"city\"\n            className=\"form-control\"\n            style={{ border: \"0px solid\", height: \"100%\", textAlign: \"left\" }}\n            placeholder=\"Enter city...\"\n          />\n        </div>\n\n        <button\n          className=\"btn btn-outline-light btn-lg\"\n          style={{ color: \"gray\" }}\n        >\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./weather.css\";\nimport moon from \"./moon.png\";\nimport sun from \"./sun.png\";\n\nconst Weather = (props) => {\n  let date = Math.round(new Date().getTime() / 1000);\n  return (\n    <div className=\"weather\">\n      <br />\n\n      <div\n        className=\"container\"\n        style={{ border: \"1px solid transparent\", backgroundColor: \"#7dcc93\" }}\n      >\n        <br />\n        <div className=\"container today\">\n          <p>\n            {date >= props.sunset_ts && (\n              <img src={moon} className=\"image\" alt=\"moon\" />\n            )}{\" \"}\n          </p>\n          <p>\n            {date < props.sunset_ts && (\n              <img src={sun} className=\"image\" alt=\"sun\" />\n            )}\n          </p>\n          <p>\n            {props.forecast_temp[0] && (\n              <p className=\"today-temp\">{props.forecast_temp[0]}Â°</p>\n            )}\n          </p>\n          <p>\n            {props.country && props.city && (\n              <p className=\"location\">\n                {props.city}, {props.country}\n              </p>\n            )}\n          </p>\n          <p>{props.desc && <p>{props.desc}</p>}</p>\n        </div>\n        <div className=\"container main\">\n          <br />\n          <p>{props.city && <p className=\"label1\">Additional Info</p>}</p>\n          <p>\n            {props.forecast_humi[0] && (\n              <p className=\"label\">\n                Humidity: <b>{props.forecast_humi[0]}</b> %\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_preci[0] >= 0 && (\n              <p className=\"label\">\n                Precipitation: <b>{props.forecast_preci[0]}</b> mm\n              </p>\n            )}\n          </p>\n        </div>\n      </div>\n      <br />\n      <div\n        className=\"container\"\n        style={{ border: \"1px solid transparent\", backgroundColor: \"#f76160\" }}\n      >\n        <br />\n        <div>\n          {props.forecast_temp[1] && (\n            <p>\n              <b className=\"label1\">Next 3 Days</b>\n            </p>\n          )}\n        </div>\n        <div className=\" container main\">\n          <br />\n          <p>\n            {props.forecast_date[1] && (\n              <p className=\"label1\">{props.forecast_date[1]}</p>\n            )}\n          </p>\n          <p>\n            {props.forecast_temp[1] && (\n              <p className=\"label\">\n                <b>{props.forecast_temp[1]}</b>Â°\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_humi[1] && (\n              <p className=\"label\">\n                Humidity: <b>{props.forecast_humi[1]}</b> %\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_preci[1] >= 0 && (\n              <p className=\"label\">\n                Precipitation: <b>{props.forecast_preci[1]}</b> mm\n              </p>\n            )}\n          </p>\n        </div>\n        <div className=\" container main\">\n          <br />\n          <p>\n            {props.forecast_date[2] && (\n              <p className=\"label1\">{props.forecast_date[2]}</p>\n            )}\n          </p>\n          <p>\n            {props.forecast_temp[2] && (\n              <p className=\"label\">\n                <b>{props.forecast_temp[2]}</b>Â°\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_humi[2] && (\n              <p className=\"label\">\n                Humidity: <b>{props.forecast_humi[2]}</b> %\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_preci[2] >= 0 && (\n              <p className=\"label\">\n                Precipitation: <b>{props.forecast_preci[2]}</b> mm\n              </p>\n            )}\n          </p>\n        </div>\n        <div className=\" container main\">\n          <br />\n          <p>\n            {props.forecast_date[3] && (\n              <p className=\"label1\">{props.forecast_date[3]}</p>\n            )}\n          </p>\n          <p>\n            {props.forecast_temp[3] && (\n              <p className=\"label\">\n                <b>{props.forecast_temp[3]}</b>Â°\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_humi[3] && (\n              <p className=\"label\">\n                Humidity: <b>{props.forecast_humi[3]}</b> %\n              </p>\n            )}\n          </p>\n          <p>\n            {props.forecast_preci[3] >= 0 && (\n              <p className=\"label\">\n                Precipitation: <b>{props.forecast_preci[3]}</b> mm\n              </p>\n            )}\n          </p>\n        </div>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = (props) => {\n  return (\n    <div className=\"chart\">\n      <br />\n      <div\n        className=\"chart-temp container\"\n        style={{ backgroundColor: \"#a4c5c6\" }}\n      >\n        <Line\n          data={props.chartDataTemp}\n          options={{\n            title: {\n              display: true,\n              text: \"Temperature variation (Past 7 Days)\",\n              fontSize: 20,\n              fontColor: \"#fff\",\n            },\n            legend: {\n              display: true,\n              labels: {\n                fontColor: \"#fff\",\n              },\n            },\n          }}\n        />\n      </div>\n      <br />\n      <div\n        className=\"chart-humi container\"\n        style={{ backgroundColor: \"#f8c687\" }}\n      >\n        <Line\n          data={props.chartDataHumi}\n          options={{\n            title: {\n              display: true,\n              text: \"Humidity variation (Past 7 Days)\",\n              fontSize: 20,\n              fontColor: \"#fff\",\n            },\n            legend: {\n              display: true,\n              labels: {\n                fontColor: \"#fff\",\n              },\n            },\n          }}\n        />\n      </div>\n      <br />\n      <div\n        className=\"chart-preci container\"\n        style={{ backgroundColor: \"#ffbaba\" }}\n      >\n        <Line\n          data={props.chartDataPreci}\n          options={{\n            title: {\n              display: true,\n              text: \"Precipitation variation (Past 7 Days)\",\n              fontSize: 20,\n              fontColor: \"#fff\",\n            },\n            legend: {\n              display: true,\n              labels: {\n                fontColor: \"#fff\",\n              },\n            },\n          }}\n        />\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport \"./App.css\";\nimport Title from \"./components/title\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nimport Chart from \"./components/chart\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n\nconst api = {\n  key: \"bff03f6366c448f6a45ab086a4bb1dcb\",\n  base: \"https://api.weatherbit.io/v2.0/\",\n  key_h: \"36be3575fe1b454883a153458211408\",\n  base_h: \"https://api.worldweatheronline.com/premium/v1/\",\n};\n\nclass App extends React.Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    humi: undefined,\n    preci: undefined,\n    desc: undefined,\n    loading: false,\n    sunset_ts: undefined,\n    forecast_date: [],\n    forecast_temp: [],\n    forecast_humi: [],\n    forecast_preci: [],\n    chartDataTemp: {},\n    chartDataHumi: {},\n    chartDataPreci: {},\n  };\n\n  search = async (e) => {\n    const city = e.target.elements.city.value;\n    this.setState({\n      loading: true,\n      city: undefined,\n    });\n    e.preventDefault();\n\n    if (city) {\n      const forecast_api_call = await fetch(\n        `${api.base}forecast/daily?city=${city}&days=4&key=${api.key}`\n      );\n      const forecast_res = await forecast_api_call.json();\n\n      console.log(forecast_res);\n\n      let forecast_date = [];\n      let forecast_temp = [];\n      let forecast_humi = [];\n      let forecast_preci = [];\n      let count = 0;\n\n      while (count <= 3) {\n        forecast_date.push(forecast_res.data[count].valid_date);\n        forecast_temp.push(forecast_res.data[count].temp);\n        forecast_humi.push(forecast_res.data[count].rh);\n        forecast_preci.push(forecast_res.data[count].precip);\n        count++;\n      }\n\n      let days = 7;\n      let temp = [];\n      let humi = [];\n      let preci = [];\n      let date_record = [];\n      while (days >= 1) {\n        let date = new Date();\n        let last = new Date(date.getTime() - days * 24 * 60 * 60 * 1000);\n        let day = last.getDate();\n        let month = last.getMonth() + 1;\n        let year = last.getFullYear();\n        let back_date = year + \"-\" + month + \"-\" + day;\n\n        date_record.push(back_date);\n\n        let history_api_call = await fetch(\n          `${api.base_h}past-weather.ashx?q=${city}&date=${back_date}&format=json&key=${api.key_h}`\n        );\n        let result = await history_api_call.json();\n\n        console.log(result);\n\n        temp.push(result.data.weather[0].hourly[0].tempC);\n        humi.push(result.data.weather[0].hourly[0].humidity);\n        preci.push(result.data.weather[0].hourly[0].precipMM);\n        days--;\n      }\n\n      this.setState({\n        city: forecast_res.city_name,\n        country: forecast_res.country_code,\n        sunset_ts: forecast_res.data[0].sunset_ts,\n        desc: forecast_res.data[0].weather.description,\n        forecast_date: forecast_date,\n        forecast_temp: forecast_temp,\n        forecast_humi: forecast_humi,\n        forecast_preci: forecast_preci,\n        loading: false,\n\n        chartDataTemp: {\n          labels: date_record,\n          datasets: [\n            {\n              label: \"Temperature (Âº C)\",\n              data: temp,\n              borderColor: \"#ff0000\",\n            },\n          ],\n        },\n\n        chartDataHumi: {\n          labels: date_record,\n          datasets: [\n            {\n              label: \"Humidity (%)\",\n              data: humi,\n              borderColor: \"#0000ff\",\n            },\n          ],\n        },\n\n        chartDataPreci: {\n          labels: date_record,\n          datasets: [\n            {\n              label: \"Precipitation (mm)\",\n              data: preci,\n              borderColor: \"#008000\",\n            },\n          ],\n        },\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Title />\n        <Form loadSearch={this.search} />\n        {this.state.loading && (\n          <ReactBootStrap.Spinner\n            animation=\"border\"\n            variant=\"secondary\"\n            className=\"spinner\"\n          />\n        )}\n        {this.state.city && (\n          <Weather\n            desc={this.state.desc}\n            temp={this.state.temp}\n            city={this.state.city}\n            sunset_ts={this.state.sunset_ts}\n            country={this.state.country}\n            humi={this.state.humi}\n            preci={this.state.preci}\n            forecast_date={this.state.forecast_date}\n            forecast_temp={this.state.forecast_temp}\n            forecast_humi={this.state.forecast_humi}\n            forecast_preci={this.state.forecast_preci}\n            chartDataTemp={this.state.chartDataTemp}\n            chartDataHumi={this.state.chartDataHumi}\n            chartDataPreci={this.state.chartDataPreci}\n          />\n        )}\n\n        {this.state.city && (\n          <Chart\n            city={this.state.city}\n            chartDataTemp={this.state.chartDataTemp}\n            chartDataHumi={this.state.chartDataHumi}\n            chartDataPreci={this.state.chartDataPreci}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/moon.84545c28.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.d8b3b4bb.png\";"],"sourceRoot":""}